### Создайте новый файл шаблона в вашей теме WordPress (обычно в папке wp-content/themes/your-theme/). Назовите его, например, custom-menu.php.

### Откройте файл шаблона:
Откройте только что созданный файл custom-menu.php в текстовом редакторе или любой интегрированной среде разработки (IDE).

### Добавьте следующий код в файл шаблона:
<?php
$menu_items = wp_get_nav_menu_items('your-menu-slug'); // Замените 'your-menu-slug' на слаг (идентификатор) вашего меню

if ($menu_items) {
  echo '<ul>';
  foreach ($menu_items as $menu_item) {
    echo '<li><a href="' . $menu_item->url . '">' . $menu_item->title . '</a></li>';
  }
  echo '</ul>';
}
?>

В коде выше мы используем функцию wp_get_nav_menu_items() для получения элементов вашего меню по его слагу (идентификатору). Затем мы проходим по каждому элементу и выводим его заголовок и ссылку в <li> элементе списка.

### Сохраните файл шаблона.

### Вставьте шаблон в ваш шаблон WordPress:
Чтобы вставить ваш шаблон меню в нужное место вашего сайта, откройте файл вашего WordPress-шаблона, где вы хотите отобразить меню, и добавьте следующий код:
<?php get_template_part('custom-menu'); ?>

Здесь 'custom-menu' - это имя файла вашего шаблона без расширения.

### Сохраните изменения в файле вашего WordPress-шаблона.
Теперь, когда вы откроете ваш сайт, меню должно отображаться в виде <ul> с <li> элементами и автоматически подтягивать пункты из административной панели WordPress. Убедитесь, что вы заменили 'your-menu-slug' на фактический слаг (идентификатор) вашего меню.

Обратите внимание, что данный подход требует более ручной настройки и не будет автоматически обновляться при изменении меню в административной панели WordPress. Если вы хотите полностью автоматизированное решение, лучше использовать функцию wp_nav_menu() в сочетании с настройками меню в административной панели.
